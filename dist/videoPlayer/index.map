{"version":3,"sources":["videoPlayer.js","index.js"],"names":["defaultOptions","parent","document","body","autoPlay","duration","isInlinePlay","url","VideoPlayer","options","Object","assign","container","player","_init","_createUI","innerHTML","appendChild","_initialPlayer","Error","createElement","src","setAttribute","playBtn","className","onclick","_openPopup","play","pause","popup","videoWrapper","closeBtn","removeChild","cloneNode"],"mappings":";;;AA0FG,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EApFH,QAAA,qBAEA,IAAMA,EAAiB,CACrBC,OAAQC,SAASC,KACjBC,UAAU,EACVC,SAAU,EACVC,cAAc,EACdC,IAAK,IAGcC,EA0ElB,WAzEWC,SAAAA,EAAAA,GAAS,EAAA,KAAA,GACdA,KAAAA,QAAUC,OAAOC,OAAO,GAAIX,EAAgBS,GAE5CG,KAAAA,UAAY,KACZC,KAAAA,OAAS,KAETC,KAAAA,QAmEN,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAhEO,MAAA,WACDF,KAAAA,UAAY,KAAKG,YACjBN,KAAAA,QAAQR,OAAOe,UAAY,GAC3BP,KAAAA,QAAQR,OAAOgB,YAAY,KAAKL,WAEhCM,KAAAA,mBA2DN,CAAA,IAAA,iBAxDgB,MAAA,WAAA,IAAA,EAAA,KACX,IAAC,KAAKT,QAAQF,IACV,MAAA,IAAIY,MAAV,qBAME,GAHCN,KAAAA,OAASX,SAASkB,cAAc,SAChCP,KAAAA,OAAOQ,IAAM,KAAKZ,QAAQF,IAE1B,KAAKE,QAAQH,aAQXO,KAAAA,OAAOS,aAAa,WAAY,gBARP,CACxBC,IAAAA,EAAUrB,SAASkB,cAAc,QACvCG,EAAQC,UAAY,6BACpBD,EAAQE,QAAU,WAChB,EAAKC,cAEFd,KAAAA,UAAUK,YAAYM,GAIxBX,KAAAA,UAAUK,YAAY,KAAKJ,UAsCjC,CAAA,IAAA,OAnCM,MAAA,WACAA,KAAAA,OAAOc,SAkCb,CAAA,IAAA,QA/BO,MAAA,WACDd,KAAAA,OAAOe,UA8Bb,CAAA,IAAA,YA3BW,MAAA,WACJhB,IAAAA,EAAYV,SAASkB,cAAc,OAElCR,OADPA,EAAUY,UAAY,eACfZ,IAwBR,CAAA,IAAA,aArBY,MAAA,WACLiB,IAAAA,EAAQ3B,SAASkB,cAAc,OACrCS,EAAML,UAAY,qBAEZM,IAAAA,EAAe5B,SAASkB,cAAc,OAC5CU,EAAaN,UAAY,sBACzBK,EAAMZ,YAAYa,GAEZC,IAAAA,EAAW7B,SAASkB,cAAc,QACxCW,EAASP,UAAY,wBACrBO,EAASN,QAAU,WACjBvB,SAASC,KAAK6B,YAAYH,IAGtBhB,IAAAA,EAAS,KAAKA,OAAOoB,WAAU,GACrCpB,EAAOS,aAAa,WAAY,YAChCQ,EAAab,YAAYJ,GACzBA,EAAOc,OAEPG,EAAab,YAAYc,GACzB7B,SAASC,KAAKc,YAAYY,OAC3B,EAAA,GAAA,QAAA,QAAA;;AC1FH,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,kBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA","file":"index.map","sourceRoot":"../../src/videoPlayer","sourcesContent":["/*\n * @author: wayou\n * @date: 2018-11-08 14:38:53\n * @description: video player\n */\n\nimport './videoPlayer.css';\n\nconst defaultOptions = {\n  parent: document.body,\n  autoPlay: false,\n  duration: 0,\n  isInlinePlay: true,\n  url: ''\n};\n\nexport default class VideoPlayer {\n  constructor(options) {\n    this.options = Object.assign({}, defaultOptions, options);\n\n    this.container = null;\n    this.player = null;\n\n    this._init();\n  }\n\n  _init() {\n    this.container = this._createUI();\n    this.options.parent.innerHTML = '';\n    this.options.parent.appendChild(this.container);\n\n    this._initialPlayer();\n  }\n\n  _initialPlayer() {\n    if (!this.options.url) {\n      throw new Error(`missing video url`);\n    }\n\n    this.player = document.createElement('video');\n    this.player.src = this.options.url;\n\n    if (!this.options.isInlinePlay) {\n      const playBtn = document.createElement('span');\n      playBtn.className = 'icon icon-video-start-play';\n      playBtn.onclick = () => {\n        this._openPopup();\n      };\n      this.container.appendChild(playBtn);\n    } else {\n      this.player.setAttribute('controls', 'controls');\n    }\n    this.container.appendChild(this.player);\n  }\n\n  play() {\n    this.player.play();\n  }\n\n  pause() {\n    this.player.pause();\n  }\n\n  _createUI() {\n    const container = document.createElement('div');\n    container.className = 'video-player';\n    return container;\n  }\n\n  _openPopup() {\n    const popup = document.createElement('div');\n    popup.className = 'video-player-popup';\n\n    const videoWrapper = document.createElement('div');\n    videoWrapper.className = 'popup-video-wrapper';\n    popup.appendChild(videoWrapper);\n\n    const closeBtn = document.createElement('span');\n    closeBtn.className = 'icon icon-video-close';\n    closeBtn.onclick = () => {\n      document.body.removeChild(popup);\n    };\n\n    const player = this.player.cloneNode(true);\n    player.setAttribute('controls', 'controls');\n    videoWrapper.appendChild(player);\n    player.play();\n\n    videoWrapper.appendChild(closeBtn);\n    document.body.appendChild(popup);\n  }\n}\n","export { default } from \"./videoPlayer\";\n"]}